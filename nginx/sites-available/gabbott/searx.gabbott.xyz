server {
	server_name searx.gabbott.xyz;

	location / {
		include uwsgi_params;
		uwsgi_pass unix:/run/uwsgi/app/searx/socket;
	}

	root /usr/local/searx/searx-src/searx;
	location /static { }


	# I don't think this will work as well.
	#proxy_pass		http://127.0.0.1:4004/;
        #
	#proxy_set_header	Host		$host;
	#proxy_set_header	Connection	$http_connection;
	#proxy_set_header	X-Real-IP	$remote_addr;
	#proxy_set_header	X-Forwarded-For	$proxy_add_x_forwarded_for;
	#proxy_set_header	X-Scheme	$scheme;
	#proxy_set_header	X-Script-Name	/searx;
        #
	#location /static/ {
	#	alias /usr/local/searx/searx-src/searx/static;
	#}

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/searx.gabbott.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/searx.gabbott.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = searx.gabbott.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	server_name searx.gabbott.xyz;

    listen 80;
    listen [::]:80;
    return 404; # managed by Certbot


}